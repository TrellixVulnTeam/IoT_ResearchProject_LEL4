scale_fill_viridis(breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))), direction = - 1) +
theme_grey() +
theme(legend.position = "right", axis.title.y=element_blank(),
text = element_text(size=7),
axis.text.x = element_text(size = 6, angle = 0),
legend.key.size = unit(1,"line")) + labs(x = "Hour of Day")
f <- ggplot(ds_filtered, aes(x = DAY, y = durationSec, fill = DAY))
f <- f + geom_boxplot() + coord_flip() +
scale_x_discrete(limits=c('Sun', 'Sat', 'Fri', 'Thu', 'Wed', 'Tue', 'Mon')) +
scale_y_continuous(expand = c(0.025, 0.025)) +
theme_grey() +
theme(legend.position = "none", axis.title.y=element_blank(), text = element_text(size=7),
axis.text.x = element_text(size = 6, angle = 0)) +
labs(x = NULL, y = "Duration (Seconds)")
plot_row = plot_grid(f, d, e, labels = "AUTO", label_size = 6, nrow = 1,  rel_widths = c(1, 1, 1.2))
plot_grid(plot_row, ncol = 1, rel_heights = c(0.1, 1))
}
p1 <- strip_plot(dsPRE, 81) + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
p2 <- strip_plot(dsPOST, 81) + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
dsPRE <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/intermediate_datasets/FINAL/S1SubActivities_preprocessedWfeatures.csv',
col_types = cols(subActNum = col_integer(),
dayNumeric = col_character(),
HOUR = col_character()))
dsPRE$start <- ymd_hms(dsPRE$start)
dsPRE$start <- force_tz(dsPRE$start, "America/New_York")
dsPRE$end <- ymd_hms(dsPRE$end)
dsPRE$end <- force_tz(dsPRE$end, "America/New_York")
dsPRE$subAct <- as.factor(dsPRE$subAct)
dsPRE$DAY <- as.factor(dsPRE$DAY)
dsPRE <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/intermediate_datasets/S1SubActivities_preprocessedWfeatures.csv',
col_types = cols(subActNum = col_integer(),
dayNumeric = col_character(),
HOUR = col_character()))
dsPRE$start <- ymd_hms(dsPRE$start)
dsPRE$start <- force_tz(dsPRE$start, "America/New_York")
dsPRE$end <- ymd_hms(dsPRE$end)
dsPRE$end <- force_tz(dsPRE$end, "America/New_York")
dsPRE$subAct <- as.factor(dsPRE$subAct)
dsPRE$DAY <- as.factor(dsPRE$DAY)
dsPOST <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/intermediate_datasets/S1SubActivities_temporalFeaturesCLEANSED.csv',
col_types = cols(subActNum = col_integer(),
dayNumeric = col_character(),
HOUR = col_character()))
dsPOST$start <- ymd_hms(dsPOST$start)
dsPOST$start <- force_tz(dsPOST$start, "America/New_York")
dsPOST$end <- ymd_hms(dsPOST$end)
dsPOST$end <- force_tz(dsPOST$end, "America/New_York")
dsPOST$subAct <- as.factor(dsPOST$subAct)
dsPOST$DAY <- as.factor(dsPOST$DAY)
p1 <- strip_plot(dsPRE, 81) + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
p2 <- strip_plot(dsPOST, 81) + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
plot_grid(p1, p2,
nrow = 2,
label_size = 8,
align = "v"
)
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/subAct81.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 3, units = c("cm"), dpi = 300)
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/subAct81.png')
p1 <- strip_plot(dsPRE, 81) + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
p2 <- strip_plot(dsPOST, 81) + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
plot_grid(p1, p2,
nrow = 2,
label_size = 8,
align = "v"
)
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/subAct81.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 6, units = c("cm"), dpi = 300)
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/subAct81.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/subAct81.png')
# all your necessary packages
packages <- c("countrycode",  "cowplot",  "bibtex", "dplyr", "ggExtra", "tidyverse",
"ggplot2",  "ggridges", "kableExtra", "knitr", "lubridate", "readr",
"tidyr", "viridis", "reticulate", "ggsci", "scales", "bibtex")
# install if needed and loading packages
to_install <- packages[! packages %in% installed.packages()[, "Package"]]
if (length(to_install)) {
install.packages(to_install, repos = "https://cloud.r-project.org")
}
invisible(lapply(packages, library, character.only = TRUE))
# get the packages version
packages_versions <- function(p) {
paste(packageDescription(p)$Package, packageDescription(p)$Version, sep = " ")
}
# Get the packages references
write.bib(packages, "packages.bib")
# merge the zotero references and the packages references
cat(paste("% Automatically generated", Sys.time()), "\n% DO NOT EDIT",
{ readLines("zotero.bib") %>%
paste(collapse = "\n") },
{ readLines("packages.bib") %>%
paste(collapse = "\n") },
file = "biblio.bib",
sep = "\n")
# Some packages reference keys must be modified
# (their key is not the package name)
# check in packages.bib
packages_keys <- packages %>% enframe() %>%
mutate(value = case_when(value == "knitr" ~ "@knitr1",
#value == "boot" ~ "@boot1",
TRUE ~ paste0("@", value)))
use_python("/anaconda3/envs/IoT_ResearchProject/bin/python", required = T)
# all your necessary packages
packages <- c("countrycode",  "cowplot",  "bibtex", "dplyr", "ggExtra", "tidyverse",
"ggplot2",  "ggridges", "kableExtra", "knitr", "lubridate", "readr",
"tidyr", "viridis", "reticulate", "ggsci", "scales", "bibtex")
# install if needed and loading packages
to_install <- packages[! packages %in% installed.packages()[, "Package"]]
if (length(to_install)) {
install.packages(to_install, repos = "https://cloud.r-project.org")
}
invisible(lapply(packages, library, character.only = TRUE))
# get the packages version
packages_versions <- function(p) {
paste(packageDescription(p)$Package, packageDescription(p)$Version, sep = " ")
}
# Get the packages references
write.bib(packages, "packages.bib")
# merge the zotero references and the packages references
cat(paste("% Automatically generated", Sys.time()), "\n% DO NOT EDIT",
{ readLines("zotero.bib") %>%
paste(collapse = "\n") },
{ readLines("packages.bib") %>%
paste(collapse = "\n") },
file = "biblio.bib",
sep = "\n")
# Some packages reference keys must be modified
# (their key is not the package name)
# check in packages.bib
packages_keys <- packages %>% enframe() %>%
mutate(value = case_when(value == "knitr" ~ "@knitr1",
#value == "boot" ~ "@boot1",
TRUE ~ paste0("@", value)))
use_python("/anaconda3/envs/IoT_ResearchProject/bin/python", required = T)
# all your necessary packages
packages <- c("countrycode",  "cowplot",  "bibtex", "dplyr", "ggExtra", "tidyverse",
"ggplot2",  "ggridges", "kableExtra", "knitr", "lubridate", "readr",
"tidyr", "viridis", "reticulate", "ggsci", "scales", "bibtex")
# install if needed and loading packages
to_install <- packages[! packages %in% installed.packages()[, "Package"]]
if (length(to_install)) {
install.packages(to_install, repos = "https://cloud.r-project.org")
}
invisible(lapply(packages, library, character.only = TRUE))
# get the packages version
packages_versions <- function(p) {
paste(packageDescription(p)$Package, packageDescription(p)$Version, sep = " ")
}
# Get the packages references
write.bib(packages, "packages.bib")
# merge the zotero references and the packages references
cat(paste("% Automatically generated", Sys.time()), "\n% DO NOT EDIT",
{ readLines("zotero.bib") %>%
paste(collapse = "\n") },
{ readLines("packages.bib") %>%
paste(collapse = "\n") },
file = "biblio.bib",
sep = "\n")
# Some packages reference keys must be modified
# (their key is not the package name)
# check in packages.bib
packages_keys <- packages %>% enframe() %>%
mutate(value = case_when(value == "knitr" ~ "@knitr1",
#value == "boot" ~ "@boot1",
TRUE ~ paste0("@", value)))
use_python("/anaconda3/envs/IoT_ResearchProject/bin/python", required = T)
# all your necessary packages
packages <- c("countrycode",  "cowplot",  "bibtex", "dplyr", "ggExtra", "tidyverse",
"ggplot2",  "ggridges", "kableExtra", "knitr", "lubridate", "readr",
"tidyr", "viridis", "reticulate", "ggsci", "scales", "bibtex")
# install if needed and loading packages
to_install <- packages[! packages %in% installed.packages()[, "Package"]]
if (length(to_install)) {
install.packages(to_install, repos = "https://cloud.r-project.org")
}
invisible(lapply(packages, library, character.only = TRUE))
# get the packages version
packages_versions <- function(p) {
paste(packageDescription(p)$Package, packageDescription(p)$Version, sep = " ")
}
# Get the packages references
write.bib(packages, "packages.bib")
# merge the zotero references and the packages references
cat(paste("% Automatically generated", Sys.time()), "\n% DO NOT EDIT",
{ readLines("zotero.bib") %>%
paste(collapse = "\n") },
{ readLines("packages.bib") %>%
paste(collapse = "\n") },
file = "biblio.bib",
sep = "\n")
# Some packages reference keys must be modified
# (their key is not the package name)
# check in packages.bib
packages_keys <- packages %>% enframe() %>%
mutate(value = case_when(value == "knitr" ~ "@knitr1",
#value == "boot" ~ "@boot1",
TRUE ~ paste0("@", value)))
use_python("/anaconda3/envs/IoT_ResearchProject/bin/python", required = T)
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/s1actExcel.png')
knitr::opts_chunk$set(
fig.align='center',
fig.pos = 'H',
echo = TRUE,
message = FALSE,
warning = FALSE
)
p <- ggplot(total_counts, aes(x = subAct, y = count, group = DAY, color = DAY))
p <- p + geom_line(size=0.5) + geom_point(size = 0.5) + theme_grey()
p <- p + coord_flip() + labs(title = "Plot of SubActivity Count versus SubActivity",
x = "SubActivity",
y = "Aggregated Count") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.9,0.84),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
p
#ggsave('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/lineChart.png',
#       plot = last_plot(), device = png(),
#       scale = 1.5, width = 8, height = 10, units = c("cm"), dpi = 300)
p <- ggplot(total_counts, aes(x = subAct, y = count, group = DAY, color = DAY))
p <- p + geom_line(size=0.5) + geom_point(size = 0.5) + theme_grey()
p <- p + coord_flip() + labs(title = "Plot of aggregated sub-activity count versus sub-activity",
x = "Sub-activity",
y = "Aggregated count") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.9,0.82),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
p
p <- ggplot(total_counts, aes(x = subAct, y = count, group = DAY, color = DAY))
p <- p + geom_line(size=0.5) + geom_point(size = 0.5) + theme_grey()
p <- p + coord_flip() + labs(title = "Plot of aggregated sub-activity count versus sub-activity",
x = "Sub-activity",
y = "Aggregated count") +
theme(text = element_text(size=8),
axis.title.y=element_blank(),
legend.title = element_blank(),
legend.position = c(0.9,0.82),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
p
p <- ggplot(df, aes(subAct, durationSec))
p <- p + geom_boxplot(fill= "plum", outlier.alpha = 0.8, outlier.size = 0.8) + # aes(colour = WDWE) #
coord_flip() + theme_grey() +
labs(title = "Box Plots",
x = "SubActivity",
y = "Duration (sec)") +
theme(text = element_text(size=8),
axis.title.y=element_blank())
p
#ggsave("images/boxPlots.png", plot = last_plot(), device = png(),
#       scale = 1.5, width = 18, height = 12, units = c("cm"), dpi = 300)
p <- ggplot(df, aes(subAct, durationSec))
p <- p + geom_boxplot(outlier.alpha = 0.8, outlier.size = 0.8) + # aes(colour = WDWE) #
coord_flip() + theme_grey() +
labs(title = "Box Plots",
x = "SubActivity",
y = "Duration (sec)") +
theme(text = element_text(size=8),
axis.title.y=element_blank())
p
#ggsave("images/boxPlots.png", plot = last_plot(), device = png(),
#       scale = 1.5, width = 18, height = 12, units = c("cm"), dpi = 300)
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/subAct67.png')
df <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/intermediate_datasets/S1SubActivities_preprocessedWfeatures.csv',
col_types = cols(subActNum = col_character(), dayNumeric = col_character(), HOUR = col_character()))
dfNoDupes = df[!duplicated(df$subActNum),]
dfNoDupes <- dfNoDupes %>% slice(1:19)
dfNoDupes %>% kable(format = "latex", caption = "A sample of n=1 of each sub-activity from the pre-processed dataset. The table has been coloured to indicate futher pre-processing steps, as discussed below.", booktabs = T) %>%
kable_styling(latex_options = c("hold_position", "striped", "scale_down"),
bootstrap_options = c("striped", "hover", "condensed"),
font_size = 8) %>%
column_spec(c(1,2)) %>%
row_spec(c(1,4,5,6,7,8,9,10,11,12,15,17,19), background = "#C6CDF2") %>%
row_spec(c(3,13,14,16,18), background = "#EACBF2") %>%
row_spec(2, background = "#FAF8B9")
fridge <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/intermediate_datasets/S1SubActivities_fridge.csv')
head(fridge, n=5) %>% kable(format = "latex", caption = "Example of duplicate sub-activity number removal", booktabs = T) %>%
kable_styling(latex_options = c("hold_position", "striped"),
bootstrap_options = c("striped", "hover", "condensed"),
font_size = 8) %>% add_header_above(c("Prior to duplicate removal" = 4, "Post to duplicate removal" = 4))
fridge <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/intermediate_datasets/S1SubActivities_fridge.csv')
head(fridge, n=5) %>% kable(format = "latex", caption = "Example of duplicate sub-activity number removal", booktabs = T) %>%
kable_styling(latex_options = c("hold_position", "striped"),
bootstrap_options = c("striped", "hover", "condensed"),
font_size = 8) %>% add_header_above(c("Prior to duplicate removal" = 4, "Post to duplicate removal" = 4))
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekdayAfternoonds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekdayAfternoonds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekdayMorningds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekdayEveningds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekdayAfternoonds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekdayMorningds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekendMorningds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekendAfternoonds_1n_60s.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/WeekendEveningds_1n_60s.png')
p <- ggplot(energy, aes(x = Year, y = Consumed, fill = Source))
population <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/datasets/world-population-by-world-regions-post-1820.csv')
population$Continent <- countrycode(sourcevar = population$Code,
origin = "genc3c",
destination = "continent")
population$Population <- population$Population / 10000
population <- na.omit(population)
population <- population %>% group_by(Continent, Year) %>% summarise(Population = sum(Population))
population$Population <- population$Population * 10000
#population <- population %>% summarise(Population = sum(Population))
#internet <- internet %>% filter(Year != 2017)
popu <- ggplot(population, aes(x = Year, y = Population, fill = Continent))
popu <- popu + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_brewer(palette = 'Set1') +
theme_grey() +
scale_x_continuous(limits = c(1885, 2015), expand = c(0.02, 0.02)) +
scale_y_continuous(limits = c(0, 8000000000)) +
labs(title="Human population by continent",
x="Year",
y="Number of people") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.11,0.75),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(5, "mm"))
popu
energy <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/datasets/primary-energy-consumption-by-source-and-region.csv')
energyCols <- c('Entity', 'Code', 'Year', 'Oil(TWh)', 'Gas(TWh)', 'Coal(TWh)', 'SolarPV(TWh)',
'OtherRenewables(TWh)', 'Wind(TWh)', 'Nuclear(TWh)', 'Hydropower(TWh)')
colnames(energy) <- energyCols
energy$Continent <- countrycode(sourcevar = energy$Code,
origin = "genc3c",
destination = "continent")
energy <- na.omit(energy)
energy <- gather(energy, `Oil(TWh)`, `Gas(TWh)`, `Coal(TWh)`, `SolarPV(TWh)`,
`OtherRenewables(TWh)`, `Wind(TWh)`, `Nuclear(TWh)`, `Hydropower(TWh)`,
key = "Source", value = "Consumed")
energy <- energy %>% group_by(Continent, Year, Source) %>% summarise(`Consumed` = sum(`Consumed`))
energy <- energy %>% group_by(Year, Source) %>% summarise(`Consumed` = sum(`Consumed`))
p <- ggplot(energy, aes(x = Year, y = Consumed, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_jco() +
theme_grey() +
scale_x_continuous(limits = c(1965, 2015), breaks = c(1965, 1970, 1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Primary energy comsumption by source, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.175,0.71),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.5, "mm"))
p
p <- ggplot(energy, aes(x = Year, y = Consumed, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_jco() +
theme_grey() +
scale_x_continuous(limits = c(1965, 2015), breaks = c(1965, 1970, 1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Primary energy comsumption by source, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.175,0.71),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.25, "mm"))
p
p <- ggplot(energy, aes(x = Year, y = Consumed, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_jco() +
theme_grey() +
scale_x_continuous(limits = c(1965, 2015), breaks = c(1965, 1970, 1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Primary energy comsumption by source, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.15,0.71),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.25, "mm"))
p
p <- ggplot(energy, aes(x = Year, y = Consumed, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_jco() +
theme_grey() +
scale_x_continuous(limits = c(1965, 2015), breaks = c(1965, 1970, 1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Primary energy comsumption by source, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.155,0.70),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.25, "mm"))
p
p <- ggplot(energyBySector, aes(x = Year, y = MTOE, fill = Source))
energyBySector <- read_table2("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/EnergySpecs/ElectricityTFCbySector.txt")
energyBySector <- gather(energyBySector, `Industry`, `Residential`, `CommercialAndPublicServices`,
`Transport`, `Other`, key = "Source", value = "MTOE")
p <- ggplot(energyBySector, aes(x = Year, y = MTOE, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_npg() +
theme_grey() +
scale_x_continuous(limits = c(1975, 2015), breaks = c(1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Electricity total final comsumption (TFC) by sector, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.21,0.77),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.5, "mm"))
p
p <- ggplot(energyBySector, aes(x = Year, y = MTOE, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_npg() +
theme_grey() +
scale_x_continuous(limits = c(1975, 2015), breaks = c(1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Electricity total final comsumption (TFC) by sector, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.15,0.77),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.5, "mm"))
p
p <- ggplot(energyBySector, aes(x = Year, y = MTOE, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_npg() +
theme_grey() +
scale_x_continuous(limits = c(1975, 2015), breaks = c(1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Electricity total final comsumption (TFC) by sector, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.175,0.77),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.5, "mm"))
p
p <- ggplot(energyBySector, aes(x = Year, y = MTOE, fill = Source))
p <- p + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_npg() +
theme_grey() +
scale_x_continuous(limits = c(1975, 2015), breaks = c(1975, 1980, 1985, 1990,
1995, 2000, 2005, 2010, 2015), expand = c(0.02, 0.02)) +
labs(title="Electricity total final comsumption (TFC) by sector, World",
x="Year",
y="TWh") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.185,0.77),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(4.5, "mm"))
p
www <- ggplot(internet, aes(x = Year, y = Number, fill = Continent))
internet <- read_csv('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/datasets/number-of-internet-users-by-country.csv')
colnames(internet)[4] <- 'Number'
internet$Continent <- countrycode(sourcevar = internet$Code,
origin = "genc3c",
destination = "continent")
internet <- na.omit(internet)
internet <- internet %>% group_by(Continent, Year) %>% summarise(Number = sum(Number))
internet <- internet %>% filter(Year != 2017)
www <- ggplot(internet, aes(x = Year, y = Number, fill = Continent))
www <- www + geom_area(alpha=0.9 , size=.2, colour="white") +
scale_fill_brewer(palette = 'Set1') +
theme_grey() +
scale_x_continuous(limits = c(1990, 2015),expand = c(0.02, 0.02)) +
scale_y_continuous(limits = c(0, 4000000000)) +
#scale_y_continuous(labels = whole)
labs(title="Internet access by total number of population",
x="Year",
y="Number of people") +
theme(text = element_text(size=8),
axis.title.x=element_blank(),
legend.title = element_blank(),
legend.position = c(0.125,0.725),
legend.box = "vertical",
legend.background = element_rect(fill=alpha('white', 0)),
legend.key.size = unit(5, "mm"))
www
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/dash5678.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/dash1234.png')
knitr::include_graphics('/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/dash5678.png')

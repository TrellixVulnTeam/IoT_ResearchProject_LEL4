legend.key.size = unit(5, "mm"))
r + geom_abline(slope = 1,intercept = 0)
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r + geom_abline(slope = 1,intercept = 0)
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, colour = "blank"))
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, colour = "black"))
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(ggplot2)
library(ggridges)
library(dplyr)
library(viridis)
library(lubridate)
library(ggExtra)
library(tidyr)
library(readr)
library(cowplot)
library(data.table)
library(ggsci)
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_fill_jco() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_jco() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_lancet() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_jco() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_aaas() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_brewer() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_discrete() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_npg() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_ordinal() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_npg() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_ucscgb() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_tron() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_startrek() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_rickandmorty() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_futurama() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_aaas() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_jco() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_lancet() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_viridis_d() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_viridis_c() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_ucscgb() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_uchicago() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_tron() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
f <- f + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_startrek() + theme_grey()
f <- f + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
dt <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
dt <- dt + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_startrek() + theme_grey()
dt <- dt + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
dt
plot_row = plot_grid(f, dt, r, labels = "AUTO", label_size = 6, nrow = 1,  rel_widths = c(1, 1, 1.2))
plot_grid(plot_row, ncol = 1, rel_heights = c(0.1, 1))
f <- ggplot(feat, aes(reorder(feature, score), score)) + geom_bar(stat="identity")
f <- f + coord_flip() + theme_gray()
f <- f + labs(x = "Feature", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
axis.title.y=element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
plot_row = plot_grid(f, dt, r, labels = "AUTO", label_size = 6, nrow = 1,  rel_widths = c(1, 1, 1.2))
plot_grid(plot_row, ncol = 1, rel_heights = c(0.1, 1))
plot_row = plot_grid(f, dt, r, labels = "AUTO", label_size = 6, nrow = 1,  rel_widths = c(1, 1, 1))
plot_grid(plot_row, ncol = 1, rel_heights = c(0.1, 1))
plot_grid(f, dt, r, labels = "AUTO", label_size = 6, nrow = 1,  rel_widths = c(1, 1, 1))
plot_grid(f, dt, r, labels = "AUTO", label_size = 6, nrow = 1,  rel_widths = c(1, 1, 1))
plot_grid(f, dt, r, labels = "AUTO", label_size = 6, nrow = 1,  rel_widths = c(1, 1, 1))
plot_grid(f, dt, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black")) + theme_grey() +
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") +
geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black")) + theme_grey() +
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR) (a.k.a Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
r
plot_grid(f, dt, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot_grid(f, dt, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4, units = c("cm"), dpi = 300)
plot_grid(f, dt, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4, units = c("cm"), dpi = 300)
getwd()
plot <- plot_grid(f, dt, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4, units = c("cm"), dpi = 300)
plot <- plot_grid(f, dt, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4, units = c("cm"), dpi = 300)
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate", y = "True Positive Rate (Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
r
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate", y = "True Positive Rate (Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
r
plot <- plot_grid(f, dt, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4, units = c("cm"), dpi = 300)
dt <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
dt <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
dt <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
d <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
feat <- read_csv('/Users/alistairgj/kitchen_refrigerator_best_feats.csv')
dt <- read_csv('/Users/alistairgj/kitchen_refrigerator_dt.csv')
roc <- read_csv('/Users/alistairgj/kitchen_refrigerator_roc.csv')
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate", y = "True Positive Rate (Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
r
d <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
d <- d + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_startrek() + theme_grey()
d <- d + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.8,0.15),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
d
f <- ggplot(feat, aes(reorder(feature, score), score)) + geom_bar(stat="identity")
f <- f + coord_flip() + theme_gray()
f <- f + labs(x = "Feature", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
axis.title.y=element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
plot <- plot_grid(f, d, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4, units = c("cm"), dpi = 300)
f <- ggplot(feat, aes(reorder(feature, score), score)) + geom_bar(stat="identity")
f <- f + coord_flip() + theme_gray()
f <- f + labs(x = "Feature", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
axis.title.y=element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
f <- ggplot(feat, aes(reorder(feature, score), score)) + geom_bar(stat="identity")
f <- f + coord_flip() + theme_gray()
f <- f + labs(x = "Feature", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
axis.title.y=element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
f
d <- ggplot(dt, aes(max_depth, test_score, group = criterion, color = criterion))
d <- d + geom_line(size=0.5) + geom_point(size = 0.5) + scale_colour_startrek() + theme_grey()
d <- d + labs(x = "Depth", y = "Score") +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.8,0.15),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
d
r <- ggplot(roc, aes(fpr, tpr))
r <- r + geom_line(size=0.5, colour="dodgerblue2") + geom_point(size = 0.5, colour="dodgerblue2") + theme_grey()
r <- r + labs(x = "False Positive Rate", y = "True Positive Rate (Recall)") +
scale_y_continuous(limits=c(0,1), expand = c(0, 0.01)) +
scale_x_continuous(limits=c(0,1), expand = c(0, 0.01)) +
theme(text = element_text(size=8),
legend.title = element_blank(),
legend.position = c(0.9,0.12),
legend.background = element_rect(fill=alpha('white', 0.5)),
legend.key.size = unit(5, "mm"))
r <- r + geom_segment(aes(x = 0, y = 0, xend = 1, yend = 1, fill = "black"))
r
plot <- plot_grid(f, d, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4, units = c("cm"), dpi = 300)
plot <- plot_grid(f, d, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4.5, units = c("cm"), dpi = 300)
getwd()
setwd("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/")
getwd()
plot <- plot_grid(f, d, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
plot <- plot_grid(f, d, r, labels = "AUTO", label_size = 8, nrow = 1,  rel_widths = c(1, 1, 1))
plot
ggsave("/Users/alistairgj/Documents/GitHub/IoT_ResearchProject/IoT_November/images/MLtest.png",
plot = last_plot(), device = png(),
scale = 1.5, width = 18, height = 4.5, units = c("cm"), dpi = 300)
